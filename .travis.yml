---
sudo: required
language: python
python:
  - "3.6"
  # PyPy versions
  # - "pypy3.5"
# matrix:
#     include:
#     - language: python
#       env: ISOLATED=true
    # - rvm: 2.0.0
    #   env: ISOLATED=true
env:
  global:
   - distribution=ubuntu
     version=18.04
   - COMMIT=${TRAVIS_COMMIT::8}
services:
  - docker
# before_install:
#    - 'sudo docker pull ${distribution}:${version} '
#    # Install Molecule
#    - sudo apt-get -qq update
#    - sudo apt-get install -y python-pip libssl-dev
#    - pip install --user molecule
jobs:
  include:
    # ansible tole gets tested with official docker images
    # - stage: Continuous Integration Step, white box SAST etc tests
    #   script:
    #     # Create a random file to store the container ID.
    #     - container_id=$(mktemp)
    #     - role_name="ansible-role-onos"
    #     # Run container in detached state, official ubuntu docker image
    #     - docker run -t -d ${run_opts} ${distribution}:${version} > "${container_id}"
    #     # Install ansible on the same container via container_id
    #     - docker exec "$(cat ${container_id})" apt-get update
    #     - docker exec "$(cat ${container_id})" apt-get install software-properties-common -y
    #     - docker exec "$(cat ${container_id})" apt-add-repository --yes --update ppa:ansible/ansible
    #     - docker exec "$(cat ${container_id})" apt-get install ansible -y
    #     - docker exec "$(cat ${container_id})" mkdir /etc/ansible/roles/${role_name}
    #     - docker cp "${PWD}/." "$(cat ${container_id})":/etc/ansible/roles/${role_name}
    #     # Ansible syntax check.
    #     - docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml --syntax-check
    #     # Test role.
    #     - docker exec  "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook  /etc/ansible/roles/${role_name}/tests/test.yml
    # # ansible role is installed on custom docker image with the Dockerfile and deployed to Docker Hub
    - stage: Continuous Delivery Step, black box DAST etc tests
      install:
        - galaxy_role_name="githubfoam.onos"
        # - sudo apt-get -qq update
        #- sudo pip install -U urllib3
        # - sudo pip install --upgrade setuptools
        - sudo apt-add-repository ppa:ansible/ansible --yes
        - sudo apt-get -qq update
        # - sudo apt-get install python3-setuptools ca-certificates
        # - sudo easy_install3 pip
        # - python3 -V
        # - sudo pip3 install ansible
        # - sudo apt-get install ansible -y
        # - ansible --version
        # - sudo apt-get install software-properties-common -y
        - sudo apt-get install -y python-pip libssl-dev
        - sudo pip install molecule
        - sudo ansible-galaxy install -p ~/ githubfoam.onos
        - ls -la
        - cd ~/.ansible/roles/githubfoam.onos
        - sudo molecule init scenario --role-name ~/.ansible/roles/githubfoam.onos
    - stage: molecule lint
      script:
        - echo "molecule lint"
    # # ansible role is installed on custom docker image with the Dockerfile and deployed to Docker Hub
    # - stage: Continuous Deployment Step, one button to deploy docker image
    #   script:
    #     # DODCKER_TOKEN must be entered travis website -> repository -> settings -> environment variables
    #     - curl https://registry.hub.docker.com/u/dockerfoam/onos/trigger/$DOCKER_TOKEN/
after_success:
    - stage: Workflow ends
      script:
        - echo "success"
# Notify Ansible Galaxy when an ansible role builds successfully.
notifications:
  #email: false
   email:
     on_success: never # default: change
     on_failure: always # default: always
   webhooks: https://galaxy.ansible.com/api/v1/notifications/
