---
sudo: required

env:
   - distribution=ubuntu
     version=18.04
   - COMMIT=${TRAVIS_COMMIT::8}

services:
  - docker


before_install:
   #- 'sudo docker build --rm=true --file=tests/dockerfiles/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests '
   - 'sudo docker pull ${distribution}:${version} '
jobs:
  include:
    - stage: build docker image
      script:
        # Create a random file to store the container ID.
        - container_id=$(mktemp)
        - role_name="ansible-role-onos"
        - bash somescript.sh
        # Run container in detached state, official ubuntu docker image
        -  sudo docker run -t -d ${run_opts} ${distribution}:${version} > "${container_id}"
        # Install ansible on the same container via container_id
        - sudo docker exec "$(cat ${container_id})" apt-get update
        - sudo docker exec "$(cat ${container_id})" apt-get install software-properties-common -y
        - sudo docker exec "$(cat ${container_id})" apt-add-repository --yes --update ppa:ansible/ansible
        - sudo docker exec "$(cat ${container_id})" apt-get install ansible -y
        - sudo docker exec "$(cat ${container_id})" mkdir /etc/ansible/roles/${role_name}
        - sudo docker cp "${PWD}/." "$(cat ${container_id})":/etc/ansible/roles/${role_name}
        # Ansible syntax check.
        - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml --syntax-check'
        # Test role.
        - 'sudo docker exec  "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook  /etc/ansible/roles/${role_name}/tests/test.yml'
        # Notify Ansible Galaxy when an ansible role builds successfully.
    - stage: push docker image
      script:
        # user/pass must be entered travis website -> repository -> settings -> environment variable
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - export DOCKER_REPO=$DOCKER_USERNAME/onos
        - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "${distribution}-${version}"; else echo $TRAVIS_BRANCH ; fi`
        - docker build --file=tests/dockerfiles/Dockerfile.${distribution}-${version} -t $DOCKER_REPO:$COMMIT .
        - docker tag $DOCKER_REPO:$COMMIT $DOCKER_REPO:$TAG
        - docker tag $DOCKER_REPO:$COMMIT $DOCKER_REPO:travis-$TRAVIS_BUILD_NUMBER
        - docker push $DOCKER_REPO
notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
